@model newSiteMVC.Models.tbl_UserControl

<div class="form-group">
    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "input-lg input-lg-width-100" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.MainText, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.MainText, new { htmlAttributes = new { @class = "input-lg input-lg-width-100" } })
        @Html.ValidationMessageFor(model => model.MainText, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ButtonText, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ButtonText, new { htmlAttributes = new { @class = "input-lg input-lg-width-100" } })
        @Html.ValidationMessageFor(model => model.ButtonText, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @if (!String.IsNullOrEmpty(Request.QueryString["ImageUrl"]))
        {
            @Html.EditorFor(model => Request.QueryString["ImageUrl"], new { htmlAttributes = new { @class = "input-lg input-lg-width-100" } })
        }
        else
        {
            @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "input-lg input-lg-width-100" } })

        }
        @Html.ValidationMessageFor(model => model.ImageUrl, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.UrlLink, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.UrlLink, new { htmlAttributes = new { @class = "input-lg input-lg-width-100" } })
        @Html.ValidationMessageFor(model => model.UrlLink, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="dropdown">
            @Html.EditorFor(model => model.Active)
            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="row">
    <div class="form-group">
        @Html.LabelFor(model => model.BackgroundColour, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.BackgroundColour, new { htmlAttributes = new { @class = "input-lg input-lg-width-80" } })
        @Html.ValidationMessageFor(model => model.BackgroundColour, "", new { @class = "text-danger" })
        <input type="text" class="" name="cpBackgroundColour" id="cpBackgroundColour" style="display: none;" onchange="check(1)">
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ButtonColour, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.ButtonColour, new { htmlAttributes = new { @class = "input-lg input-lg-width-80" } })
        @Html.ValidationMessageFor(model => model.ButtonColour, "", new { @class = "text-danger" })
        <input type="text" class="" name="cpButtonColourr" id="cpButtonColour" style="display: none;" onchange="check(2)">
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ButtonTextColour, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.ButtonTextColour, new { htmlAttributes = new { @class = "input-lg input-lg-width-80" } })
        @Html.ValidationMessageFor(model => model.ButtonTextColour, "", new { @class = "text-danger" })
        <input type="text" class="" name="cpButtonTextColour" id="cpButtonTextColour" style="display: none;" onchange="check(3)">
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TitleColour, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.TitleColour, new { htmlAttributes = new { @class = "input-lg input-lg-width-80" } })
        @Html.ValidationMessageFor(model => model.TitleColour, "", new { @class = "text-danger" })
        <input type="text" class="" name="cpTitleColour" id="cpTitleColour" style="display: none;" onchange="check(4)">
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MainTextColour, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.MainTextColour, new { htmlAttributes = new { @class = "input-lg input-lg-width-80" } })
        @Html.ValidationMessageFor(model => model.MainTextColour, "", new { @class = "text-danger" })
        <input type="text" class="" name="cpMainTextColour" id="cpMainTextColour" style="display: none;" onchange="check(5)">
    </div>
    
</div>
